// Generated by kea-typegen on Wed, 01 Mar 2023 20:20:44 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface explorationLogicType extends Logic {
    actionCreators: {
        setFunnelPath: (funnelPath: any) => ({
            type: "set funnel path (src.components.FunnelExploration)";
            payload: {
                funnelPath: any;
            };
        });
    };
    actionKeys: {
        "set funnel path (src.components.FunnelExploration)": "setFunnelPath";
    };
    actionTypes: {
        setFunnelPath: "set funnel path (src.components.FunnelExploration)";
    };
    actions: {
        setFunnelPath: (funnelPath: any) => void;
    };
    asyncActions: {
        setFunnelPath: (funnelPath: any) => Promise<any>;
    };
    defaults: {
        funnelPath: any[];
    };
    events: {};
    key: undefined;
    listeners: {
        "setFunnelPath": ((action: {
            type: "set funnel path (src.components.FunnelExploration)";
            payload: {
                funnelPath: any;
            };
        }, previousState: any) => void | Promise<void>)[];
    };
    path: [
        "src",
        "components",
        "FunnelExploration"
    ];
    pathString: "src.components.FunnelExploration";
    props: Record<string, unknown>;
    reducer: (state: any, action: any, fullState: any) => {
        funnelPath: any[];
    };
    reducers: {
        funnelPath: (state: any[], action: any, fullState: any) => any[];
    };
    selector: (state: any) => {
        funnelPath: any[];
    };
    selectors: {
        funnelPath: (state: any, props?: any) => any[];
    };
    sharedListeners: {};
    values: {
        funnelPath: any[];
    };
    _isKea: true;
    _isKeaWithKey: false;
}